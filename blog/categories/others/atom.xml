<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: others | 乌衣巷]]></title>
  <link href="http://CodePeasant.github.io/blog/categories/others/atom.xml" rel="self"/>
  <link href="http://CodePeasant.github.io/"/>
  <updated>2014-12-02T15:23:35+08:00</updated>
  <id>http://CodePeasant.github.io/</id>
  <author>
    <name><![CDATA[吴逸翔]]></name>
    <email><![CDATA[1032197148@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[线性代数读书笔记]]></title>
    <link href="http://CodePeasant.github.io/blog/2014/12/02/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <updated>2014-12-02T21:45:00+08:00</updated>
    <id>http://CodePeasant.github.io/blog/2014/12/02/线性代数读书笔记</id>
    <content type="html"><![CDATA[<h1>线性代数读书笔记</h1>

<h2>1.行列式</h2>

<ul>
<li>D= |a11 a12|=a11*a22-a21*a12称为二阶行列式
 |a21 a22|</li>
<li>n阶行列式D：n阶行列式由n行n列组成，供n<sup>2</sup>个元素</li>
<li>余子式Mij：划去第i行第j列剩余的n-1阶行列式称为元素aij的余子式</li>
<li>代数余子式Aij：(-1)<sup>i+j</sup>*Mij称为元素aij的代数余子式</li>
<li>高阶行列式的展开降阶：D=a1j*A1j+&hellip;+anj*Anj</li>
<li>行列式与其转置行列式值相等，即D=DT</li>
<li>行列式的行与列地位相同，可以按行展开也可以按列展开</li>
<li>kD等于对某一行或者某一列乘以k</li>
<li>行列式某一列为0则行列式为0</li>
<li>行列式交换两行，则值取反号</li>
<li>行列式两行相同或成比例则值为0</li>
<li>行列式把某一行的元素的k倍加到另一行上，其值不变</li>
<li>Cramer法则，xj=Dj/D 其中Dj是用常数列替换D的第j列</li>
</ul>


<h2>2.矩阵</h2>

<ul>
<li>m行n列的矩阵称为m*n矩阵</li>
<li>若两矩阵行列数分别相等，则称它们是同型矩阵</li>
<li>零矩阵：所有元素为0</li>
<li>n阶方阵：n*n矩阵</li>
<li>单位矩阵：主对角线元素为1，其他元素为0的n阶方阵，记为I</li>
<li>对角矩阵/上(下)三角形矩阵/行矩阵(行向量)/列矩阵(列向量)</li>
<li>矩阵的加法/数量乘积/</li>
<li>矩阵乘法不满足交换律和消除律，但满足分配律和结合律</li>
<li>转置矩阵:ATT=A,(A+B)T = AT+BT, (AB)T = BTAT</li>
<li>对称矩阵:AT=A，反称矩阵:AT=-A</li>
<li>可逆矩阵:A为n阶方阵，A(-1) * A = A * A(-1)= I，则称A为可逆矩阵/满秩矩阵/非奇异矩阵</li>
<li>伴随矩阵A*:A的每个元素aij都替换成其代数余子式Aij组成的矩阵</li>
<li>A(-1) = A*/|A|, A*是A的伴随矩阵，|A|是A的行列式值</li>
<li><p>n阶方阵可逆的充要条件是方阵的行列式值不为0</p></li>
<li><p>矩阵的初等变换</p></li>
<li>互换矩阵的第i行(列)与第j行(列)的位置，记为ri&lt;&ndash;>rj(ci&lt;&ndash;>cj)</li>
<li>用一个非零常数k乘矩阵的第i行(列)，记为kri(kci)</li>
<li><p>将矩阵的第j行(列)的k倍加到第i行(列)上，记为ri+k*rj (记为ci+k*cj)</p></li>
<li><p>矩阵的行初等变换与列初等变换统称为矩阵的初等变换，行初等变换可以把矩阵变成行阶梯形矩阵和行标准形，进一步加上列初等变换可以变成矩阵的标准形</p></li>
<li>对单位矩阵I施行一次初等变换得到的矩阵称为初等矩阵，包括：Rij, Ri(k), Ri+j(k)</li>
<li>对矩阵A施行一次行初等变换，相当于用相应的初等矩阵左乘A，施行一次列初等变换相当于用相应的初等矩阵右乘A</li>
<li>初等变换求逆法</li>
<li>从一个m行n列的矩阵A中任意抽取k行k列按原来的相对位置构成的行列式称为A的一个k阶子式</li>
<li>矩阵A中不等于0的子式的最大阶数称为矩阵A的秩，记为r(A)，故可逆矩阵又称为满秩矩阵</li>
<li>初等变换不改变矩阵的秩，故用初等变换在变换到行阶梯形乃至标准形的过程中可以看出矩阵的秩</li>
</ul>


<h2>5.相似矩阵</h2>

<ul>
<li>AX=λX，则称数λ为矩阵A的特征值，非零向量X为矩阵A对应特征值λ的特征向量* f(λ)=|λI-A|称为n阶矩阵A的特征多项式，f(λ)=0在复数域内有n个解，即A的n个特征值</li>
<li>对于n阶方阵A、B，若有可逆的n阶方阵P，使得P(-1)*A*P=B，则称A与B相似，记为A~B，可逆矩阵P称为相似变换矩阵</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hadoop权威指南笔记]]></title>
    <link href="http://CodePeasant.github.io/blog/2014/11/28/Hadoop%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E7%AC%94%E8%AE%B0/"/>
    <updated>2014-11-28T19:32:00+08:00</updated>
    <id>http://CodePeasant.github.io/blog/2014/11/28/Hadoop权威指南笔记</id>
    <content type="html"><![CDATA[<h1>Hadoop权威指南笔记</h1>

<h2>1.&amp;2.关于MapReduce</h2>

<ul>
<li>数据本地化是MapReduce的核心特征，hadoop通过显式网络拓扑结构在存储数据附近的机器上进行运算任务，避免把数据复制来复制去耗尽网络带宽</li>
<li>把数据从Mapper传给Reducer称为Shuffle</li>
</ul>


<h2>3.HDFS</h2>

<ul>
<li>namenode负责维护所有文件和目录的文件树，datanode负责存储实际的数据块* HDFS提供了POSIX文件接口，通过操作url hdfs://path可以像操作本地文件一样操作文件，并实现本地和hdfs文件的互传</li>
<li>通过FUSE(Filesystem in Userspace)可以把hdfs挂载到unix系统上</li>
<li>HDFS默认提供Java API访问，其他语言要使用thrift</li>
<li>HDFS的写操作只有三个datanode都写成功了才会返回，如果有一个写失败了则会删除该节点并新建一个节点</li>
<li>每个块的元数据都会存储在namenode的内存中，因此HDFS存储小文件的效率很低</li>
</ul>


<h2>4.Hadoop I/O</h2>

<ul>
<li>数据完整性用CRC32的checksum</li>
<li>Hadoop会自动识别被压缩了的文件并进行解压缩，对于不可切分的压缩格式如gzip/LZO/DEFLATE无法启动并行处理，可以使用可切分的bz2</li>
<li>通过Writable/Readble接口实现序列号/反序列号</li>
<li>序列化/RPC框架: Avro/Thrfit/ProtoBuf</li>
<li>基于文件的数据结构: SequenceFile/MapFile</li>
</ul>


<h2>6.MapReduce工作机制</h2>

<ul>
<li>4大组件: client/jobtracker/tasktracker/HDFS</li>
<li>调度算法:FIFO/Fair Scheduler(支持抢占)</li>
</ul>


<h2>9.构建Hadoop集群</h2>

<ul>
<li>服务器类型: namenode/datanode/jobtracker/tasktracker</li>
<li>使用Kerbros来实现访问控制</li>
</ul>


<h2>12.Hive</h2>

<ul>
<li>使用类似SQL的语法来运行MapReduce查询HDFS，用于数据仓库的离线数据分析</li>
</ul>


<h2>13.HBase</h2>

<ul>
<li>列存储，类似于key-value数据库，提供良好的扩展性和硬盘存储，可以存储几个T的数据</li>
</ul>


<h2>14.Zookeeper</h2>

<ul>
<li>配置管理/锁服务</li>
</ul>

]]></content>
  </entry>
  
</feed>
